{"ast":null,"code":"import _slicedToArray from \"/home/abhijeet/Documents/user_react_view_app/1824546-9rjhw (1)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/abhijeet/Documents/user_react_view_app/1824546-9rjhw (1)/src/App.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport Form from \"./Form\";\nimport \"../src/styles.css\";\n\nvar App = function App() {\n  var _useState = useState(\"good\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstLine = _useState2[0],\n      setFirstLine = _useState2[1];\n\n  var _useState3 = useState(\"better\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      secondLine = _useState4[0],\n      setSecondLine = _useState4[1];\n\n  var _useState5 = useState(\"best\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      thirdLine = _useState6[0],\n      setThirdLine = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      line1 = _useState8[0],\n      setLine1 = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      line2 = _useState10[0],\n      setLine2 = _useState10[1]; // const [line3, setLine3] = useState([]);\n\n\n  function reset() {\n    var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n    if (val === \"line1\") {\n      setLine2([]); //    setLine3([]);\n    } else if (val === \"line2\") {\n      setLine1([]); //   setLine3([]);\n    } else if (val === \"line3\") {\n      setLine1([]);\n      setLine2([]);\n    } else {\n      setLine1([]);\n      setLine2([]); //   setLine3([]);\n    }\n  }\n\n  function shuffle() {\n    var array = [];\n\n    for (var i = 0; i < 9; ++i) {\n      array[i] = i;\n    }\n\n    var tmp,\n        current,\n        top = array.length;\n    if (top) while (--top) {\n      current = Math.floor(Math.random() * (top + 1));\n      tmp = array[current];\n      array[current] = array[top];\n      array[top] = tmp;\n    }\n    return array;\n  }\n\n  useEffect(function () {\n    if (firstLine !== \"good\") {\n      setLine1(shuffle());\n      reset(\"line1\");\n    } else {\n      reset();\n    }\n  }, [firstLine]);\n  useEffect(function () {\n    if (secondLine !== \"better\") {\n      setLine2(shuffle());\n      reset(\"line2\");\n    } else {\n      reset();\n    }\n  }, [secondLine]); // useEffect(() => {\n  //   if (thirdLine !== \"best\") {\n  //     setLine3(shuffle());\n  //     reset(\"line3\");\n  //   } else {\n  //     reset();\n  //   }\n  // }, [thirdLine]);\n\n  console.log(line1, line2);\n\n  var getOption = function getOption() {\n    var option = {\n      title: {\n        text: \"Vehicle - Realtime Analytics\",\n        left: \"center\"\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: \"{a} <br/>{b} : {c}\"\n      },\n      legend: {\n        left: \"left\",\n        data: [\"A\", \"B\"]\n      },\n      xAxis: {\n        type: \"category\",\n        name: \"x\",\n        splitLine: {\n          show: false\n        },\n        data: [\"SUNDAY\", \"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\"]\n      },\n      grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n      },\n      yAxis: {\n        type: \"log\",\n        name: \"y\",\n        minorTick: {\n          show: true\n        },\n        minorSplitLine: {\n          show: true\n        }\n      },\n      series: [{\n        name: firstLine,\n        type: \"line\",\n        data: line1\n      }, {\n        name: secondLine,\n        type: \"line\",\n        data: line2\n      } // {\n      //   name: thirdLine,\n      //   type: \"line\",\n      //   data: line3\n      // }\n      ]\n    };\n    return option;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    setFirstLine: setFirstLine,\n    setSecondLine: setSecondLine,\n    setThirdLine: setThirdLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactEcharts, {\n    option: getOption(),\n    style: {\n      height: \"500px\",\n      width: \"60%\",\n      marginTop: \"10px\"\n    },\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/abhijeet/Documents/user_react_view_app/1824546-9rjhw (1)/src/App.js"],"names":["React","useState","useEffect","ReactEcharts","Form","App","firstLine","setFirstLine","secondLine","setSecondLine","thirdLine","setThirdLine","line1","setLine1","line2","setLine2","reset","val","shuffle","array","i","tmp","current","top","length","Math","floor","random","console","log","getOption","option","title","text","left","tooltip","trigger","formatter","legend","data","xAxis","type","name","splitLine","show","grid","right","bottom","containLabel","yAxis","minorTick","minorSplitLine","series","height","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport Form from \"./Form\";\nimport \"../src/styles.css\";\n\nconst App = () => {\n  const [firstLine, setFirstLine] = useState(\"good\");\n  const [secondLine, setSecondLine] = useState(\"better\");\n  const [thirdLine, setThirdLine] = useState(\"best\");\n  const [line1, setLine1] = useState([]);\n  const [line2, setLine2] = useState([]);\n  // const [line3, setLine3] = useState([]);\n  function reset(val = \"\") {\n    if (val === \"line1\") {\n      setLine2([]);\n      //    setLine3([]);\n    } else if (val === \"line2\") {\n      setLine1([]);\n      //   setLine3([]);\n    } else if (val === \"line3\") {\n      setLine1([]);\n      setLine2([]);\n    } else {\n      setLine1([]);\n      setLine2([]);\n      //   setLine3([]);\n    }\n  }\n  function shuffle() {\n    let array = [];\n    for (var i = 0; i < 9; ++i) array[i] = i;\n    var tmp,\n      current,\n      top = array.length;\n    if (top)\n      while (--top) {\n        current = Math.floor(Math.random() * (top + 1));\n        tmp = array[current];\n        array[current] = array[top];\n        array[top] = tmp;\n      }\n    return array;\n  }\n  useEffect(() => {\n    if (firstLine !== \"good\") {\n      setLine1(shuffle());\n      reset(\"line1\");\n    } else {\n      reset();\n    }\n  }, [firstLine]);\n  useEffect(() => {\n    if (secondLine !== \"better\") {\n      setLine2(shuffle());\n      reset(\"line2\");\n    } else {\n      reset();\n    }\n  }, [secondLine]);\n  // useEffect(() => {\n  //   if (thirdLine !== \"best\") {\n  //     setLine3(shuffle());\n  //     reset(\"line3\");\n  //   } else {\n  //     reset();\n  //   }\n  // }, [thirdLine]);\n  console.log(line1, line2);\n  const getOption = () => {\n    const option = {\n      title: {\n        text: \"Vehicle - Realtime Analytics\",\n        left: \"center\"\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: \"{a} <br/>{b} : {c}\"\n      },\n      legend: {\n        left: \"left\",\n        data: [\"A\", \"B\"]\n      },\n      xAxis: {\n        type: \"category\",\n        name: \"x\",\n        splitLine: { show: false },\n        data: [\n          \"SUNDAY\",\n          \"MONDAY\",\n          \"TUESDAY\",\n          \"WEDNESDAY\",\n          \"THURSDAY\",\n          \"FRIDAY\",\n          \"SATURDAY\"\n        ]\n      },\n      grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n      },\n      yAxis: {\n        type: \"log\",\n        name: \"y\",\n        minorTick: {\n          show: true\n        },\n        minorSplitLine: {\n          show: true\n        }\n      },\n      series: [\n        {\n          name: firstLine,\n          type: \"line\",\n          data: line1\n        },\n        {\n          name: secondLine,\n          type: \"line\",\n          data: line2\n        }\n        // {\n        //   name: thirdLine,\n        //   type: \"line\",\n        //   data: line3\n        // }\n      ]\n    };\n    return option;\n  };\n  return (\n    <div>\n      <Form\n        setFirstLine={setFirstLine}\n        setSecondLine={setSecondLine}\n        setThirdLine={setThirdLine}\n      />\n      <ReactEcharts\n        option={getOption()}\n        style={{ height: \"500px\", width: \"60%\", marginTop: \"10px\" }}\n        className=\"App\"\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}